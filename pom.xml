<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.fabri1983.eternity2</groupId>
	<artifactId>solver</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Eternity 2 Solver</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<skip.proguard.build>true</skip.proguard.build> <!-- modified only under proguard profile -->
		<skip.docker.build>true</skip.docker.build> <!-- modified only under related docker profiles -->
		<dockerfile.selector>simple</dockerfile.selector> <!-- modified only in related docker profiles -->
		<source.dir>${project.basedir}/src/main/java</source.dir> <!-- overridden by source processor (if any) -->
		<external.libs.dir>${project.basedir}/external-libs</external.libs.dir>
		<roaring.bitmap.version>0.9.15</roaring.bitmap.version>
		<mpje.version>0.44</mpje.version>
		<teavm.version>0.7.0-dev-1199</teavm.version> <!-- See last dev version at https://github.com/konsoletyper/teavm -->
		<jmh.version>1.21</jmh.version>
		<javaewah.version>1.1.13</javaewah.version>
		<junit.version>4.13.2</junit.version>
	</properties>

	<dependencies>
		<!-- Roaring Bitmap (Fast Random Access Compressed Bitmap) (currently only in test scope) -->
		<dependency>
			<groupId>org.roaringbitmap</groupId>
			<artifactId>RoaringBitmap</artifactId>
			<version>${roaring.bitmap.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- MPJExpress -->
		<dependency>
			<groupId>mpje</groupId>
			<artifactId>mpi</artifactId>
			<version>${mpje.version}</version>
			<scope>system</scope>
			<systemPath>${external.libs.dir}/mpje/lib/mpi.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>mpje</groupId>
			<artifactId>mpiExp</artifactId>
			<version>${mpje.version}</version>
			<scope>system</scope>
			<systemPath>${external.libs.dir}/mpje/lib/mpiExp.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>mpje</groupId>
			<artifactId>mpj</artifactId>
			<version>${mpje.version}</version>
			<scope>system</scope>
			<systemPath>${external.libs.dir}/mpje/lib/mpj.jar</systemPath>
		</dependency>
		<!-- TeaVM -->
		<dependency>
			<groupId>org.teavm</groupId>
			<artifactId>teavm-classlib</artifactId>
			<version>${teavm.version}</version>
			<scope>provided</scope>
		</dependency>	
		<dependency>
			<groupId>org.teavm</groupId>
			<artifactId>teavm-core</artifactId>
			<version>${teavm.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Java EWAH (A compressed alternative to the Java BitSet class) (currently only in test scope) -->
		<dependency>
			<groupId>com.googlecode.javaewah</groupId>
			<artifactId>JavaEWAH</artifactId>
			<version>${javaewah.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- JMH Java Microbenchmark Harness -->
		<dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
            <scope>provided</scope> <!-- only this dependency will be added to the final jar as per profile settings -->
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Junit 4.x -->
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>mpje8</id>
			<properties>
				<final.jar.name>e2solver_mpje</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>8</maven.compiler.target>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>dummy/package/name</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>dummy/package/name</shade.exclusion.filter.3>
				<pg.injar.filter></pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.mpje.MainFasterMPJE</manifest.main.class>
				<env.props.file>mpje.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>mpje11</id>
			<properties>
				<final.jar.name>e2solver_mpje</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>11</maven.compiler.target>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>dummy/package/name</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>dummy/package/name</shade.exclusion.filter.3>
				<pg.injar.filter></pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.mpje.MainFasterMPJE</manifest.main.class>
				<env.props.file>mpje.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>mpje17</id>
			<properties>
				<final.jar.name>e2solver_mpje</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>17</maven.compiler.target>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>dummy/package/name</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>dummy/package/name</shade.exclusion.filter.3>
				<pg.injar.filter></pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.mpje.MainFasterMPJE</manifest.main.class>
				<env.props.file>mpje.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>java8</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<final.jar.name>e2solver</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>8</maven.compiler.target>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>dummy/package/name</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>org/fabri1983/eternity2/mpje/**</shade.exclusion.filter.3>
				<pg.injar.filter></pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.faster.MainFaster</manifest.main.class>
				<env.props.file>threads.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>java8native</id>
			<properties>
				<final.jar.name>e2solver</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>8</maven.compiler.target>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>org/fabri1983/eternity2/ui/**</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>org/fabri1983/eternity2/mpje/**</shade.exclusion.filter.3>
				<pg.injar.filter>!imgs/**</pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.faster.MainFasterNative</manifest.main.class>
				<env.props.file>threads.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>java11</id>
			<properties>
				<final.jar.name>e2solver</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>11</maven.compiler.target>
				<maven.compiler.release>11</maven.compiler.release>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>dummy/package/name</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>org/fabri1983/eternity2/mpje/**</shade.exclusion.filter.3>
				<pg.injar.filter></pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.faster.MainFaster</manifest.main.class>
				<env.props.file>threads.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>java11native</id>
			<properties>
				<final.jar.name>e2solver</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>11</maven.compiler.target>
				<maven.compiler.release>11</maven.compiler.release>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>org/fabri1983/eternity2/ui/**</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>org/fabri1983/eternity2/mpje/**</shade.exclusion.filter.3>
				<pg.injar.filter>!imgs/**</pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.faster.MainFasterNative</manifest.main.class>
				<env.props.file>threads.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>java17</id>
			<properties>
				<final.jar.name>e2solver</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>17</maven.compiler.target>
				<maven.compiler.release>17</maven.compiler.release>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>dummy/package/name</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>org/fabri1983/eternity2/mpje/**</shade.exclusion.filter.3>
				<pg.injar.filter></pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.faster.MainFaster</manifest.main.class>
				<env.props.file>threads.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>java17native</id>
			<properties>
				<final.jar.name>e2solver</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>17</maven.compiler.target>
				<maven.compiler.release>17</maven.compiler.release>
				<shade.exclusion.filter.1>org/fabri1983/eternity2/faster/benchmark/**</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>org/fabri1983/eternity2/ui/**</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>org/fabri1983/eternity2/mpje/**</shade.exclusion.filter.3>
				<pg.injar.filter>!imgs/**</pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.faster.MainFasterNative</manifest.main.class>
				<env.props.file>threads.properties</env.props.file>
			</properties>
		</profile>
		<profile>
			<id>benchmark</id>
			<properties>
				<final.jar.name>e2solver_benchmark</final.jar.name>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>11</maven.compiler.target>
				<maven.compiler.release>11</maven.compiler.release>
				<shade.exclusion.filter.1>dummy/package/name</shade.exclusion.filter.1>
				<shade.exclusion.filter.2>org/fabri1983/eternity2/ui/**</shade.exclusion.filter.2>
				<shade.exclusion.filter.3>org/fabri1983/eternity2/mpje/**</shade.exclusion.filter.3>
				<pg.injar.filter>!imgs/**</pg.injar.filter>
				<manifest.main.class>org.fabri1983.eternity2.faster.benchmark.MainFasterBenchmark</manifest.main.class>
				<env.props.file>threads.properties</env.props.file>
			</properties>
			<dependencies>
				<dependency>
		            <groupId>org.openjdk.jmh</groupId>
		            <artifactId>jmh-core</artifactId>
		            <version>${jmh.version}</version>
		            <scope>compile</scope>
		        </dependency>
			</dependencies>
		</profile>
		<profile>
			<id>proguard</id>
			<properties>
				<skip.proguard.build>false</skip.proguard.build>
			</properties>
		</profile>
		<profile>
			<id>teavm</id>
			<build>
				<plugins>
					<plugin>
						<!-- See http://teavm.org/docs/tooling/maven.html -->
						<groupId>org.teavm</groupId>
						<artifactId>teavm-maven-plugin</artifactId>
						<version>${teavm.version}</version>
						<dependencies>
							<!-- This dependency is required by TeaVM to emulate subset of Java class library -->
							<dependency>
								<groupId>org.teavm</groupId>
								<artifactId>teavm-classlib</artifactId>
								<version>${teavm.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>c-target</id>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<mainClass>${manifest.main.class}</mainClass>
									<!--<targetDirectory>${teavm.c.targetDirectory}</targetDirectory> -->
									<targetType>C</targetType>
									<!--optimizationLevel>FULL</optimizationLevel-->
									<!--minHeapSize>16</minHeapSize-->
									<!--maxHeapSize>512</maxHeapSize-->
									<!--<entryPointName>teavm_start</entryPointName> -->
									<heapDump>true</heapDump>
									<minifying>false</minifying>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<properties>
				<skip.docker.build>false</skip.docker.build>
				<dockerfile.selector>simple</dockerfile.selector>
			</properties>
		</profile>
		<profile>
			<id>docker-native-llvm</id>
			<properties>
				<skip.docker.build>false</skip.docker.build>
				<dockerfile.selector>graalvm.llvm</dockerfile.selector>
			</properties>
		</profile>
		<profile>
			<id>docker-native-agent</id>
			<properties>
				<skip.docker.build>false</skip.docker.build>
				<dockerfile.selector>graalvm.agent</dockerfile.selector>
			</properties>
		</profile>
		<profile>
			<id>docker-native-llvm-build</id>
			<properties>
				<skip.docker.build>false</skip.docker.build>
				<dockerfile.selector>graalvm.llvm.build</dockerfile.selector>
			</properties>
		</profile>
		<profile>
			<id>Windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<script.extension>.bat</script.extension>
				<skip.chmod>true</skip.chmod>
			</properties>
		</profile>
		<profile>
			<id>Unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<script.extension>.sh</script.extension>
				<skip.chmod>false</skip.chmod>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<!-- TeaVM Repository -->
		<repository>
			<id>teavm-dev</id>
			<url>https://teavm.org/maven/repository</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<!-- allows SNAPSHOT plugins -->
		<repository>
			<id>maven-snapshots</id>
			<name>Maven Plugin Repository</name>
        	<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<!-- TeaVM Repository -->
		<pluginRepository>
			<id>teavm-dev</id>
			<url>https://teavm.org/maven/repository</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<!-- allows SNAPSHOT plugins -->
		<pluginRepository>
			<id>maven-snapshots</id>
			<name>Maven Plugin Repository</name>
        	<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<finalName>${final.jar.name}</finalName>
		<sourceDirectory>${source.dir}</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>profiles/*</exclude>
				</excludes>
			</resource>
		</resources>
		<filters>
			<filter>src/main/resources/profiles/${env.props.file}</filter>
		</filters>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<compilerArgs>
						<arg>-O</arg>

					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<finalName>${final.jar.name}</finalName>
					<addMavenDescriptor>false</addMavenDescriptor>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>false</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
							<mainClass>${manifest.main.class}</mainClass>
						</manifest>
					</archive>
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<!-- copy Docker related files to target folder -->
					<execution>
						<id>copy-docker-files</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<sourceFile>${project.basedir}/src/main/docker/.dockerignore</sourceFile>
									<destinationFile>${project.build.directory}/.dockerignore</destinationFile>
								</fileSet>
								<fileSet>
									<sourceFile>${project.basedir}/src/main/docker/Dockerfile.${dockerfile.selector}.java${maven.compiler.target}</sourceFile>
									<destinationFile>${project.build.directory}/Dockerfile</destinationFile>
								</fileSet>
								<fileSet>
									<sourceFile>${project.basedir}/src/main/docker/docker-build${script.extension}</sourceFile>
									<destinationFile>${project.build.directory}/docker-build${script.extension}</destinationFile>
								</fileSet>
								<fileSet>
									<sourceFile>${project.basedir}/src/main/docker/llvm_setup.sh</sourceFile>
									<destinationFile>${project.build.directory}/llvm_setup.sh</destinationFile>
								</fileSet>
							</fileSets>
						</configuration>
					</execution>
					<!-- copy MPJe machines file to target folder -->
					<execution>
						<id>copy-mpje-machines-file</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<sourceFile>${project.basedir}/src/main/resources/profiles/machines</sourceFile>
									<destinationFile>${project.build.directory}/machines</destinationFile>
								</fileSet>
							</fileSets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.3.1-SNAPSHOT</version> <!-- supports Java 16+ (needs plugin repository configuration for accessing snapshots) -->
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
            				<createDependencyReducedPom>true</createDependencyReducedPom>
							<minimizeJar>true</minimizeJar>
							<filters>
								<filter>
									<artifact>org.fabri1983.eternity2:*</artifact>
									<excludes>
										<exclude>${shade.exclusion.filter.1}</exclude>
										<exclude>${shade.exclusion.filter.2}</exclude>
										<exclude>${shade.exclusion.filter.3}</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<id>process-classes-with-proguard</id>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${skip.proguard.build}</skip>
					<proguardVersion>8.0.1</proguardVersion> <!-- 6.3.0 or 8.0.1 -->
					<proguardInclude>${basedir}/proguard.conf</proguardInclude>
					<injar>${project.build.finalName}.jar</injar>
					<inFilter>${pg.injar.filter}</inFilter>
                    <outjar>${project.build.finalName}.jar</outjar>
                    <outputDirectory>${project.build.directory}</outputDirectory>
					<addMavenDescriptor>false</addMavenDescriptor>
					<options>
						<option>-target ${maven.compiler.target}</option>
					</options>
				</configuration>
				<dependencies>
					<!--dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>6.3.0beta1</version>
						<scope>runtime</scope>
			        </dependency-->
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-base</artifactId>
						<version>7.2.0-beta2</version>
						<scope>runtime</scope>
			        </dependency>
			        <dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-core</artifactId>
						<version>8.0.1</version>
						<scope>runtime</scope>
			        </dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version> <!-- using a version minor than 1.8 doesn't work correctly -->
				<executions>
					<execution>
						<?m2e execute onConfiguration,onIncremental?>
						<id>copy-external-libs</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target name="copy-external-libs">
								<copy todir="${project.build.directory}/libs">
									<fileset dir="${external.libs.dir}">
										<include name="mpje/**/*" />
									</fileset>
								</copy>
								<chmod perm="u+rwx" type="file">
									<fileset dir="${project.build.directory}/libs/mpje/bin">
										<include name="*" />
										<exclude name="*.bat" />
									</fileset>
								</chmod>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>chmod for sh script</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<skip>${skip.chmod}</skip>
							<executable>chmod</executable>
							<commandlineArgs>+x ${project.build.directory}/docker-build${script.extension}</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>build Docker image</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<skip>${skip.docker.build}</skip>
							<executable>${project.build.directory}/docker-build${script.extension}</executable>
							<commandlineArgs>${project.build.finalName} ${project.packaging} dev</commandlineArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>