# mvn clean package -P java11native,docker-native-agent
#
# This dockerfile intended to run the eternity2 solver under GraalVM with an agentlib to 
# produce native image configuration files for later usage on a native image build.
# Produced json files must be located at src/main/resources/META-INF/native-image/org.fabri1983.eternity2 folder in your project. 

# Writing output into Host file system with Docker Volumes:
#   On Windows Docker Toolbox open Virtual Box machine Settings -> Shared Folder -> 
#       set Folder Path: C:\MyProjects\Eclipse
#       set Name: Eclipse
#       set Auto-mount: true
#       set Mount point: c
#     docker container run -it --rm -v /Eclipse/eternity2_solver/target/:/app/ --name e2solver fabri1983dockerid/e2solver:dev
#	On Windows Docker Desktop use:
#     docker container run -it --rm -v c:/MyProjects/Eclipse/eternity2_solver/target/:/app/ --name e2solver fabri1983dockerid/e2solver:dev
#   On Linux (WSL) use:
#     docker container run -it --rm -v /mnt/c/MyProjects/Eclipse/eternity2_solver/target/:/app/ --name e2solver fabri1983dockerid/e2solver:dev
#
# Enter into a running container:
#   docker container exec -it e2solver
######################################################################################################
FROM ghcr.io/graalvm/graalvm-ce:java11-21.2.0-b1

ARG E2_JAR

ENV ENV_E2_JAR=${E2_JAR}

RUN gu install native-image \
    && mkdir -p /app/native-config

WORKDIR /app

# No need to copy into image build the jar since it's provided on mounted volume
#COPY ${ENV_E2_JAR} ./

CMD java -agentlib:native-image-agent=config-output-dir=native-config/ \
    -Dui.show=false -Dnum.tasks=1 -Djava.awt.headless=true -Dsun.java2d.xrender=false \
    -jar ${ENV_E2_JAR}
