
######################################################################################################
FROM ubuntu:bionic

ARG E2_JAR

ARG JVMCI_URL=https://github.com/graalvm/labs-openjdk-11/releases/download/jvmci-20.0-b02/labsjdk-ce-11.0.6+9-jvmci-20.0-b02-linux-amd64.tar.gz
ARG GRAALVM_BRANCH=release/graal-vm/20.0

ENV JAVA_HOME=/opt/openjdk-jvmci
ENV PATH="/opt/mx-master:$JAVA_HOME/bin:$PATH"

ENV ENV_E2_JAR=${E2_JAR}

RUN apt-get -y update \
 && apt-get -y install git curl build-essential python unzip zlib1g-dev \
 && rm -rf /var/lib/apt/lists/*

RUN cd /opt \
 && curl -LO https://github.com/graalvm/mx/archive/master.zip \
 && unzip master.zip \
 && rm master.zip \
 && curl -L $JVMCI_URL | tar -xz \
 && mv *jdk* openjdk-jvmci \
 && git clone --single-branch --branch $GRAALVM_BRANCH https://github.com/oracle/graal.git 

# use graalvm-show instead of build to see what will be built
RUN cd /opt \
 && cd graal/vm \
 && mx --disable-polyglot --disable-libpolyglot --disable-installables=true --skip-libraries=true \
 --exclude-components=gvm,gu,lg,mjdksl,nju,nic,nil,polynative,tflm \
 --dynamicimports /substratevm build

RUN mkdir -p /app/llvm

COPY ${E2_JAR} /app/

WORKDIR /app

# Entry with exec so jvm flags are correctly gathered
ENTRYPOINT exec mx native-image --verbose -H:CompilerBackend=llvm -H:+SpawnIsolates -H:TempDirectory=/app/llvm -jar ${ENV_E2_JAR}
