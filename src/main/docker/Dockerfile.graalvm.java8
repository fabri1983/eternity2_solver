# mvn clean package -P java8native,docker-native-llvm
#
# Writing output into Host file system with Docker Volumes:
#   On Windows Docker Toolbox open Virtual Box machine Settings -> Shared Folder -> 
#     set Folder Path: C:\MyProjects\Eclipse
#     set Name: Eclipse
#     set Auto-mount: true
#     set Mount point: c
#   docker container run -it --rm -m 1100m -v /Eclipse/eternity2_solver/target/:/app/ --name e2solver fabri1983dockerid/e2solver:dev
#
# Copying output into Host file system using Docker cp command:
#   docker container run -it -m 1100m --name e2solver fabri1983dockerid/e2solver:dev
#   docker container cp e2solver:/app target
#   docker container rm e2solver
#
# See https://github.com/oracle/graal/blob/master/substratevm/LLVM-BACKEND.md
# See https://docs.oracle.com/en/graalvm/enterprise/20/guide/reference/llvm-bitcode.html
######################################################################################################
FROM oracle/graalvm-ce:20.3.0-java8
#FROM springci/graalvm-ce:20.3-dev-java8
#FROM springci/graalvm-ce:master-java8

ARG E2_JAR

ENV ENV_E2_JAR=${E2_JAR}

RUN gu install native-image llvm-toolchain \
 && echo $(lli --print-toolchain-path) \
 && export LLVM_TOOLCHAIN=$(lli --print-toolchain-path) \
 && export PATH=${LLVM_TOOLCHAIN}:$PATH \
 && mkdir -p /app

WORKDIR /app

COPY ${ENV_E2_JAR} ./

# Using CMD so it can be overwritten from outside
CMD native-image --verbose -H:CompilerBackend=llvm -H:+SpawnIsolates -H:Features=org.graalvm.home.HomeFinderFeature \
    -H:CCompilerOption=-O0 -H:Optimize=0 \
    -H:Log=InvokeCC -H:TempDirectory=./ -jar ${ENV_E2_JAR}
